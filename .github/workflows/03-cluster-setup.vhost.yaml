name: 03-cluster-setup/vhost

on:
  workflow_dispatch:
    inputs:
      environment:
        type: environment


env:
  WORKFLOW_DIR: 03-cluster-setup/vhost

jobs:
  terraform:
    environment: ${{ inputs.environment }}
    runs-on: [ubuntu-latest]
    permissions:
      contents: read
      id-token: write
    defaults:
      run:
        working-directory: ${{ env.WORKFLOW_DIR }}

    steps:
      - uses: actions/checkout@v3

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "~1.9"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::130900203380:role/tenzin-io.platform-setup
          aws-region: us-east-1

      - name: Get Vault token
        id: vault-secrets
        uses: hashicorp/vault-action@v2
        with:
          url: https://vault.tenzin.io
          role: tenzin-io.platform-setup
          method: jwt
          exportToken: true
          secrets: |
            secrets/data/github-actions/tailscale tailscale_oauth_client_id | TS_OAUTH_CLIENT_ID ;
            secrets/data/github-actions/tailscale tailscale_oauth_client_secret | TS_OAUTH_CLIENT_SECRET ;
            kubernetes-secrets/data/kubeconfig/${{ vars.CLUSTER_NAME }}-${{ vars.CLUSTER_UUID }} kubeconfig | KUBECONFIG ;

      - name: Tailscale connection
        uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ steps.vault-secrets.outputs.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ steps.vault-secrets.outputs.TS_OAUTH_CLIENT_SECRET }}
          tags: tag:ci
      
      - name: Setup kubernetes-admin.conf
        run: |-
          touch kubernetes-admin.conf
          chmod 0600 kubernetes-admin.conf
          cat<<'eof' > kubernetes-admin.conf
          ${{ steps.vault-secrets.outputs.KUBECONFIG }}
          eof

      - name: Setup state.config
        run: |-
          cat<<'eof' > state.config
          key            = "terraform/03-cluster-setup/${{ vars.CLUSTER_NAME }}-${{ vars.CLUSTER_UUID }}.tfstate"
          bucket         = "tenzin-io"
          dynamodb_table = "tenzin-io"
          region         = "us-east-1"
          eof

      - name: Setup terraform.tfvars
        run: |-
          cat<<'eof' > terraform.tfvars
          cluster_name     = "${{ vars.CLUSTER_NAME }}"
          cluster_uuid     = "${{ vars.CLUSTER_UUID }}"
          eof

      - name: Run Terraform Init
        run: terraform init -backend-config=state.config
        
      - name: Run Terraform Format
        run: terraform fmt -check
        
      - name: Run Terraform Validate
        run: terraform validate
        env:
          HTTPS_PROXY: ${{ vars.CLUSTER_NAME }}-${{ vars.CLUSTER_UUID }}-agent-node-0.tail508ed.ts.net

      - name: Terraform apply
        run: terraform apply -auto-approve
        env:
          HTTPS_PROXY: ${{ vars.CLUSTER_NAME }}-${{ vars.CLUSTER_UUID }}-agent-node-0.tail508ed.ts.net

...
